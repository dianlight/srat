name: Update Coverage Badges

on:
  workflow_dispatch: # Allow manual trigger only

# Disabled - this workflow is currently disabled
# To re-enable, uncomment the push trigger below:
# push:
#   branches: [ "main" ]
#   paths:
#     - "backend/src/**/*.go"
#     - "backend/src/**/*_test.go"
#     - "frontend/src/**/*.ts"
#     - "frontend/src/**/*.tsx"
#     - "frontend/src/**/*.test.ts"
#     - "frontend/src/**/*.test.tsx"
#     - ".github/workflows/coverage-badges.yml"

permissions:
  contents: write

jobs:
  update-badges:
    runs-on: ubuntu-latest
    name: Update Coverage Badges in README
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: 'backend/src/go.mod'
          cache-dependency-path: "**/*.sum"

      - uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version-file: frontend/package.json

      - name: Prepare env
        run: |
          cd backend
          make patch
          cd ../frontend
          bun install
          cd ..

      - name: Update coverage badges
        run: |
          bash scripts/update-coverage-badges.sh
          make docs

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet README.md; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes to README.md"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "README.md has been updated"
          fi

      - name: Commit and push if changed
        if: steps.check_changes.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Stash any unrelated changes that might exist (including the README change)
          git stash --include-untracked || true
          
          # Pull latest changes first
          git pull --rebase origin main
          
          # Unstash and commit the changes
          git stash pop || true
          git add README.md
          git commit -m "ðŸŽ¯ test: update coverage badges [skip ci]"
          
          git push
