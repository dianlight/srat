{
	"name": "SRAT",
	//"image": "ghcr.io/hassio-addons/base:18.0.0",
	//"image": "ghcr.io/home-assistant/amd64-base-python:3.13-alpine3.22",
	"image": "ghcr.io/home-assistant/aarch64-base-python:3.13-alpine3.22",
	"runArgs": [
		//	"--platform=linux/amd64",
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--privileged",
		"--env-file",
		".devcontainer/.env" // Pass the .env file to Docker directly
	],
	"initializeCommand": "mkdir -p .devcontainer && touch .devcontainer/.env && chmod 600 .devcontainer/.env",
	"updateContentCommand": {
		"mainScrip": ".devcontainer/updateContentCommand.sh"
	},
	"forwardPorts": [
		8123
	],
	"remoteUser": "root",
	"postCreateCommand": ".devcontainer/postCreateCommand.sh",
	"postStartCommand": "chmod +x .devcontainer/postStartCommand.sh && CONTAINER_WORKSPACE_FOLDER=${containerWorkspaceFolder} ./.devcontainer/postStartCommand.sh",
	"portsAttributes": {
		"8080": {
			"label": "Backend",
			"onAutoForward": "silent",
			"protocol": "http",
			"hostPort": 8080,
			"containerPort": 8080
		},
		"3000": {
			"label": "FrontEnd",
			"onAutoForward": "silent",
			"protocol": "http",
			"hostPort": 3000,
			"containerPort": 3000
		},
		"8090": {
			"label": "Dev Autoreload",
			"onAutoForward": "silent",
			"elevateIfNeeded": true,
			"requireLocalPort": true,
			"protocol": "http",
			"hostPort": 8090,
			"containerPort": 8090
		},
		"8123": {
			"label": "Home Assistant",
			"onAutoForward": "notify"
		}
	},
	"remoteEnv": {
		"BUN_INSTALL": "${containerEnv:HOME}/.bun",
		"PATH": "${containerEnv:HOME}/.bun/bin:${containerEnv:PATH}",
		"SUPERVISOR_URL": "http://${containerEnv:HOMEASSISTANT_IP}/",
		"SUPERVISOR_TOKEN": "${containerEnv:SUPERVISOR_TOKEN}",
		"HOST_PROJECT_PATH": "${localWorkspaceFolder}",
		"PS1": "%(?:%{%}%1{➜%} :%{%}%1{➜%} ) %{%}%c%{%} $(git_prompt_info)"
	},
	//	"containerEnv": {
	// These will be set as environment variables inside the container
	//		"HOMEASSISTANT_IP": "${localEnv:HOMEASSISTANT_IP}",
	//		"HOMEASSISTANT_SSH_USER": "${localEnv:HOMEASSISTANT_SSH_USER}"
	//	},
	"userEnvProbe": "loginInteractiveShell",
	"customizations": {
		"vscode": {
			"settings": {
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "/bin/bash"
					}
				},
				"terminal.integrated.defaultProfile.linux": "bash",
				"go.toolsManagement.checkForUpdates": "local",
				"go.useLanguageServer": true,
				"go.lintTool": "golangci-lint",
				"go.lintFlags": [
					"--fast"
				],
				"files.eol": "\n",
				"editor.tabSize": 4,
				"editor.formatOnPaste": true,
				"editor.formatOnSave": true,
				"editor.formatOnType": false,
				"files.trimTrailingWhitespace": true,
				"python.analysis.typeCheckingMode": "basic",
				"python.analysis.autoImportCompletions": true,
				"python.defaultInterpreterPath": "/usr/bin/python",
				"[python]": {
					"editor.defaultFormatter": "charliermarsh.ruff"
				}
			},
			"terminal.integrated.defaultProfile.linux": "bash",
			"terminal.integrated.profiles.linux": {
				"bash": {
					"path": "/bin/bash"
				}
			},
			"extensions": [
				"vivaxy.vscode-conventional-commits",
				"ms-vscode.makefile-tools",
				"github.vscode-github-actions",
				"esbenp.prettier-vscode",
				"mortenson.go-template-transpiler-extension",
				"jgclark.vscode-todo-highlight",
				"Gruntfuggly.todo-tree",
				"yy0931.vscode-sqlite3-editor",
				"be5invis.toml",
				"VizzleTF.geminicommit",
				"google.geminicodeassist",
				"zoellner.openapi-preview",
				"golang.go",
				"oorzc.mind-map",
				"eamodio.gitlens",
				"charliermarsh.ruff",
				"github.vscode-pull-request-github",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ryanluker.vscode-coverage-gutters"
			]
		}
	},
	"features": {
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": true,
			"installOhMyZsh": true,
			"configureZshAsDefaultShell": true
		},
		"ghcr.io/cirolosapio/devcontainers-features/alpine-docker-outside-of-docker:0": {
			"installDockerCompose": true
		},
		"ghcr.io/cirolosapio/devcontainers-features/alpine-gh-cli:0": {},
		"ghcr.io/cirolosapio/devcontainers-features/alpine-jq:0": {}
	},
	"mounts": [
		"type=bind,source=${localEnv:HOME}/.ssh,target=/root/.ssh,readonly"
		//		"type=bind,source=${localEnv:HOME}/.gemini,target=/root/.gemini"
	]
}