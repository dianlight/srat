{
	"name": "SRAT",
	"image": "ghcr.io/hassio-addons/base:18.2.0",
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--privileged",
		"--env-file",
		".devcontainer/.env" // Pass the .env file to Docker directly
	],
	"initializeCommand": "mkdir -p .devcontainer && touch .devcontainer/.env && chmod 600 .devcontainer/.env",
	"updateContentCommand": {
		"mainScrip": ".devcontainer/updateContentCommand.sh"
	},
	"remoteUser": "root",
	"postCreateCommand": ".devcontainer/postCreateCommand.sh",
	"postStartCommand": "chmod +x .devcontainer/postStartCommand.sh && CONTAINER_WORKSPACE_FOLDER=${containerWorkspaceFolder} ./.devcontainer/postStartCommand.sh",
	"portsAttributes": {
		"8080": {
			"label": "Backend",
			"onAutoForward": "silent",
			"protocol": "http",
			"hostPort": 8080,
			"containerPort": 8080
		},
		"3000": {
			"label": "FrontEnd",
			"onAutoForward": "silent",
			"protocol": "http",
			"hostPort": 3000,
			"containerPort": 3000
		},
		"8090": {
			"label": "Dev Autoreload",
			"onAutoForward": "silent",
			"elevateIfNeeded": true,
			"requireLocalPort": true,
			"protocol": "http",
			"hostPort": 8090,
			"containerPort": 8090
		}
	},
	"remoteEnv": {
		"BUN_INSTALL": "${containerEnv:HOME}/.bun",
		"PATH": "${containerEnv:HOME}/.bun/bin:${containerEnv:PATH}",
		"SUPERVISOR_URL": "http://${containerEnv:HOMEASSISTANT_IP}/",
		"SUPERVISOR_TOKEN": "${containerEnv:SUPERVISOR_TOKEN}",
		"GH_TOKEN": "${containerEnv:GITHUB_TOKEN}",
		"HOMEASSISTANT_IP": "${containerEnv:HOMEASSISTANT_IP}",
		"ROLLBAR_MCP_ACCESS_TOKEN": "${containerEnv:ROLLBAR_MCP_ACCESS_TOKEN}",
		"ROLLBAR_CLIENT_ACCESS_TOKEN": "${containerEnv:ROLLBAR_CLIENT_ACCESS_TOKEN}",
		"HOST_PROJECT_PATH": "${localWorkspaceFolder}",
		"PS1": "%(?:%{%}%1{➜%} :%{%}%1{➜%} ) %{%}%c%{%} $(git_prompt_info)"
	},
	//	"containerEnv": {
	// These will be set as environment variables inside the container
	//		"HOMEASSISTANT_IP": "${localEnv:HOMEASSISTANT_IP}",
	//		"HOMEASSISTANT_SSH_USER": "${localEnv:HOMEASSISTANT_SSH_USER}"
	//	},
	"userEnvProbe": "loginInteractiveShell",
	"customizations": {
		"vscode": {
			"settings": {
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "/bin/bash"
					}
				},
				"terminal.integrated.defaultProfile.linux": "bash",
				"go.toolsManagement.checkForUpdates": "local",
				"go.useLanguageServer": true,
				"go.lintTool": "golangci-lint",
				"go.lintFlags": [
					"--fast"
				]
			},
			"terminal.integrated.defaultProfile.linux": "bash",
			"terminal.integrated.profiles.linux": {
				"bash": {
					"path": "/bin/bash"
				}
			},
			"extensions": [
				"ms-vscode.makefile-tools",
				"github.vscode-github-actions",
				"esbenp.prettier-vscode",
				"mortenson.go-template-transpiler-extension",
				"jgclark.vscode-todo-highlight",
				"Gruntfuggly.todo-tree",
				"yy0931.vscode-sqlite3-editor",
				"be5invis.toml",
				"zoellner.openapi-preview",
				"golang.go",
				"GitHub.remotehub",
				"codezombiech.gitignore",
				"oven.bun-vscode",
				"SanjulaGanepola.github-local-actions",
				"bierner.markdown-mermaid"
			],
			"mcp": {
				"servers": {
					"playwright": {
						"command": "bunx",
						"args": [
							"-y",
							"@microsoft/mcp-server-playwright"
						]
					},
					"deepwiki": {
						"type": "http",
						"url": "https://mcp.deepwiki.com/sse"
					},
					"browsermcp": {
						"command": "bunx",
						"args": [
							"@browsermcp/mcp@latest"
						]
					},
					"context7": {
						"type": "stdio",
						"command": "bunx",
						"args": [
							"-y",
							"@upstash/context7-mcp@latest"
						]
					},
					"github": {
						"url": "https://api.githubcopilot.com/mcp/"
					}
				}
			}
		}
	},
	"features": {
		"ghcr.io/devcontainers/features/common-utils:2": {
			"installZsh": true,
			"installOhMyZsh": true,
			"configureZshAsDefaultShell": true
		},
		"ghcr.io/cirolosapio/devcontainers-features/alpine-docker-outside-of-docker:0": {
			"installDockerCompose": true
		},
		"ghcr.io/cirolosapio/devcontainers-features/alpine-gh-cli:0": {},
		"ghcr.io/cirolosapio/devcontainers-features/alpine-jq:0": {}
	},
	"mounts": [
		"type=bind,source=${localEnv:HOME}/.ssh,target=/root/.ssh,readonly"
		//		"type=bind,source=${localEnv:HOME}/.gemini,target=/root/.gemini"
	]
}