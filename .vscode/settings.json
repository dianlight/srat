{
  "conventionalCommits.scopes": [
    "api",
    "gh_actions",
    "monorepo",
    "webapp",
    "http_server",
    "samba",
    "docker",
    "sensors"
  ],
  "makefile.configureOnOpen": false,
  "better-comments.highlightPlainText": true,
  "commitSage.commit.commitFormat": "emojiKarma",
  "commitSage.commit.onlyStagedChanges": true,
  "commitSage.commit.promptForRefs": true,
  "commitSage.gemini.model": "gemini-2.0-flash-exp",
  "geminicodeassist.codeGenerationPaneViewEnabled": true,
  "geminicodeassist.updateChannel": "Insiders",
  "remote.localPortHost": "allInterfaces",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "go.buildTags": "embedallowed_no",
  "testing.showAllMessages": true,
  "go.disableConcurrentTests": true,
  "go.testEnvVars": {
    "GOMAXPROCS": "1",
  },
  "github.copilot.chat.agent.thinkingTool": true,
  "go.inlayHints.assignVariableTypes": true,
  "go.inlayHints.compositeLiteralFields": true,
  "go.inlayHints.constantValues": true,
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Follow the Conventional Commits format strictly for commit messages. Use the structure below:\n\n```\n<type>[optional scope]: <gitmoji> <description>\n\n[optional body]\n```\n\nGuidelines:\n\n1. **Type and Scope**: Choose an appropriate type (e.g., `feat`, `fix`) and optional scope to describe the affected module or feature.\n\n2. **Gitmoji**: Include a relevant `gitmoji` that best represents the nature of the change.\n\n3. **Description**: Write a concise, informative description in the header; use backticks if referencing code or specific terms.\n\n4. **Body**: For additional details, use a well-structured body section:\n   - Use bullet points (`*`) for clarity.\n   - Clearly describe the motivation, context, or technical details behind the change, if applicable.\n\nCommit messages should be clear, informative, and professional, aiding readability and project tracking."
    }
  ],
  "editor.codeActionsOnSave": {
    "source.action.useSortedKeys.biome": "explicit",
    "source.fixAll.biome": "explicit",
  },
  "biome.requireConfiguration": true,
  "python.analysis.typeCheckingMode": "standard"
}