# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_install_hook_types: [pre-commit, post-commit, commit-msg]
repos:
    - repo: local
      hooks:
        - id: remove-go-mod-replace
          name: Remove go.mod replace lines
          stages: [pre-commit]
          entry: ./scripts/remove-go-mod-replace.sh
          language: system
          files: ^backend/src/go\.mod$ # Only run if go.mod is among the changed files
          pass_filenames: true # The script handles the go.mod file directly

        - id: restore-go-mod-replace
          name: Restore go.mod replace lines
          entry: ./scripts/restore-go-mod-replace.sh
          language: system
          always_run: true # This hook should always run after commit attempts
          stages: [post-commit] # This ensures it runs after the commit
          pass_filenames: true

        - id: update-frontend-package-version
          name: Update frontend package.json version from git tag
          stages: [pre-commit]
          entry: ./scripts/update-frontend-version.sh
          language: system
          files: ^frontend/package\.json$ # Only run if frontend/package.json is changed
          pass_filenames: false # Script knows the file path and handles it

#          - id: gohack-disable
#            name: disable gohack
#            stages: [pre-commit]
#            description: Disable gohack before commit
#            entry: sh -c 'cd backend/src && go tool gohack undo && git add go.mod'
#            language: system
#            #        files: ^backend/src/
#            types: [text]

#          - id: gohack-enable
#            name: enable gohack
#            stages: [post-commit]
#            description: Enable gohack after commit
#            entry: make -C backend patch
#            always_run: true
#            language: system
#            #        files: ^backend/src/
#            types: [text]

    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v5.0.0
      hooks:
          #    -   id: trailing-whitespace
          #    -   id: end-of-file-fixer
          - id: check-yaml
          #    -   id: check-json
          - id: check-toml
          - id: check-xml
          - id: check-added-large-files
            args: ["--maxkb=1024"]
          - id: check-merge-conflict

    - repo: https://github.com/tekwizely/pre-commit-golang
      rev: v1.0.0-rc.1
      hooks:
          #
          # Go Build
          #
          - id: go-build-mod
          #-   id: go-build-pkg
          - id: go-build-repo-mod
      #-   id: go-build-repo-pkg
      #
      # Go Mod Tidy
      #
      #-   id: go-mod-tidy
      #-   id: go-mod-tidy-repo
      #
      # Go Test
      #
      #-   id: go-test-mod
      #-   id: go-test-pkg
      #-   id: go-test-repo-mod
      #-   id: go-test-repo-pkg
      #
      # Go Vet
      #
      #-   id: go-vet
      #-   id: go-vet-mod
      #-   id: go-vet-pkg
      #-   id: go-vet-repo-mod
      #-   id: go-vet-repo-pkg
      #
      # Revive
      #
      #-   id: go-revive
      #-   id: go-revive-mod
      #-   id: go-revive-repo-mod
      #
      # GoSec
      #
      #-   id: go-sec-mod
      #-   id: go-sec-pkg
      #-   id: go-sec-repo-mod
      #-   id: go-sec-repo-pkg
      #
      # StaticCheck
      #
      #-   id: go-staticcheck-mod
      #-   id: go-staticcheck-pkg
      #-   id: go-staticcheck-repo-mod
      #-   id: go-staticcheck-repo-pkg
      #
      # StructSlop
      #
      #-   id: go-structslop-mod
      #-   id: go-structslop-pkg
      #-   id: go-structslop-repo-mod
      #-   id: go-structslop-repo-pkg
      #
      # Formatters
      #
      #-   id: go-fmt
      #-   id: go-fmt-repo
      #-   id: go-fumpt        # replaces go-fmt
      #-   id: go-fumpt-repo   # replaces go-fmt-repo
      #-   id: go-imports      # replaces go-fmt
      #-   id: go-imports-repo # replaces go-fmt-repo
      #-   id: go-returns      # replaces go-imports & go-fmt
      #-   id: go-returns-repo # replaces go-imports-repo & go-fmt-repo
      #
      # Style Checkers
      #
      #-   id: go-lint
      #-   id: go-critic
      #
      # GolangCI-Lint
      # - Fast Multi-Linter
      # - Can be configured to replace MOST other hooks
      # - Supports repo config file for configuration
      # - https://github.com/golangci/golangci-lint
      #
      #-   id: golangci-lint
      #-   id: golangci-lint-mod
      #-   id: golangci-lint-pkg
      #-   id: golangci-lint-repo-mod
      #-   id: golangci-lint-repo-pkg
      #
      # Invoking Custom Go Tools
      # - Configured *entirely* through the `args` attribute, ie:
      #   args: [ go, test, ./... ]
      # - Use arg `--hook:error-on-output` to indicate that any output from the tool
      #   should be treated as an error.
      # - Use the `name` attribute to provide better messaging when the hook runs
      # - Use the `alias` attribute to be able to invoke your hook via `pre-commit run`
      #
      #-   id: my-cmd
      #-   id: my-cmd-mod
      #-   id: my-cmd-pkg
      #-   id: my-cmd-repo
      #-   id: my-cmd-repo-mod
      #-   id: my-cmd-repo-pkg
    - repo: https://github.com/psf/black
      rev: 23.7.0
      hooks:
        - id: black
          language_version: python3.11

    - repo: https://github.com/pycqa/isort
      rev: 5.12.0
      hooks:
        - id: isort

    - repo: https://github.com/pycqa/flake8
      rev: 6.0.0
      hooks:
        - id: flake8
          additional_dependencies: [flake8-docstrings]

    - repo: https://github.com/pre-commit/mirrors-mypy
      rev: v1.5.1
      hooks:
        - id: mypy
          additional_dependencies: [types-requests]

    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.4.0
      hooks:
        - id: trailing-whitespace
        - id: end-of-file-fixer
        - id: check-yaml
        - id: check-added-large-files
        - id: check-merge-conflict

