definitions:
  dto.BinaryAsset:
    properties:
      id:
        type: integer
      size:
        type: integer
    type: object
  dto.BlockInfo:
    properties:
      partitions:
        description: |-
          Partitions contains an array of pointers to `Partition` structs, one for
          each partition on any disk drive on the host system.
        items:
          $ref: '#/definitions/dto.BlockPartition'
        type: array
      total_size_bytes:
        type: integer
    type: object
  dto.BlockPartition:
    properties:
      default_mount_point:
        description: MountPoint is the path where this partition is mounted last time
        type: string
      device_id:
        description: DeviceId is the ID of the block device this partition is on.
        type: integer
      filesystem_label:
        description: |-
          FilesystemLabel is the label of the filesystem contained on the
          partition. On Linux, this is derived from the `ID_FS_NAME` udev entry.
        type: string
      label:
        description: |-
          Label is the human-readable label given to the partition. On Linux, this
          is derived from the `ID_PART_ENTRY_NAME` udev entry.
        type: string
      mount_data:
        description: MountData contains additional data associated with the partition.
        type: string
      mount_flags:
        description: MountFlags contains the mount flags for the partition.
        items:
          $ref: '#/definitions/dto.MounDataFlag'
        type: array
      mount_point:
        description: MountPoint is the path where this partition is mounted.
        type: string
      mount_point_data:
        allOf:
        - $ref: '#/definitions/dto.MountPointData'
        description: Relative MountPointData
      name:
        description: Name is the system name given to the partition, e.g. "sda1".
        type: string
      partition_flags:
        description: PartiionFlags contains the mount flags for the partition.
        items:
          $ref: '#/definitions/dto.MounDataFlag'
        type: array
      read_only:
        description: IsReadOnly indicates if the partition is marked read-only.
        type: boolean
      size_bytes:
        description: |-
          SizeBytes contains the total amount of storage, in bytes, this partition
          can consume.
        type: integer
      type:
        description: Type contains the type of the partition.
        type: string
      uuid:
        description: |-
          UUID is the universally-unique identifier (UUID) for the partition.
          This will be volume UUID on Darwin, PartUUID on linux, empty on Windows.
        type: string
    type: object
  dto.DataDirtyTracker:
    properties:
      settings:
        type: boolean
      shares:
        type: boolean
      users:
        type: boolean
      volumes:
        type: boolean
    type: object
  dto.ErrorCode:
    properties:
      errorCode:
        enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        type: integer
        x-enum-comments:
          device_not_found: '"Device not found {{.DeviceID}}",404'
          generic_error: '"An unexpected error occurred",500'
          invalid_parameter: '"Invalid parameter: {{.Key}}. {{.Message}}",405'
          json_marshal_error: '"Unable to marshal JSON: {{.Error}}",500'
          json_unmarshal_error: '"Unable to unmarshal JSON: {{.Error}}",500'
          mount_fail: '"Unable to mount {{.Device}} on {{.Path}}. {{.Message}}",406'
          network_timeout: '"Network operation timed out",408'
          permission_denied: '"Permission denied for {{.Action}}",403'
          unknown: invalid
          unmount_fail: '"Unable to unmount {{.ID}}. {{.Message}}",406'
        x-enum-varnames:
        - unknown
        - generic_error
        - json_marshal_error
        - json_unmarshal_error
        - invalid_parameter
        - mount_fail
        - unmount_fail
        - device_not_found
        - network_timeout
        - permission_denied
      errorMessage:
        type: string
      httpCode:
        type: integer
    type: object
  dto.ErrorInfo:
    properties:
      code:
        $ref: '#/definitions/dto.ErrorCode'
      data:
        additionalProperties: {}
        type: object
      deep_message:
        type: string
      error: {}
      message:
        type: string
      trace:
        items:
          $ref: '#/definitions/tracerr.Frame'
        type: array
    type: object
  dto.EventMessageEnvelope:
    properties:
      data: {}
      event:
        $ref: '#/definitions/dto.EventType'
      id:
        type: string
    type: object
  dto.EventType:
    enum:
    - hello
    - update
    - heartbeat
    - share
    - volumes
    - dirty
    type: string
    x-enum-varnames:
    - EventHello
    - EventUpdate
    - EventHeartbeat
    - EventShare
    - EventVolumes
    - EventDirty
  dto.HAMountUsage:
    enum:
    - none
    - backup
    - media
    - share
    - internal
    type: string
    x-enum-varnames:
    - UsageAsNone
    - UsageAsBackup
    - UsageAsMedia
    - UsageAsShare
    - UsageAsInternal
  dto.HealthPing:
    properties:
      alive:
        type: boolean
      aliveTime:
        type: integer
      dirty_tracking:
        $ref: '#/definitions/dto.DataDirtyTracker'
      last_error:
        type: string
      last_release:
        $ref: '#/definitions/dto.ReleaseAsset'
      read_only:
        type: boolean
      samba_process_status:
        $ref: '#/definitions/dto.SambaProcessStatus'
    type: object
  dto.MounDataFlag:
    enum:
    - 1
    - 2
    - 4
    - 8
    - 16
    - 32
    - 64
    - 1024
    - 2048
    - 4096
    - 33554432
    - -2147483648
    - 2097152
    type: integer
    x-enum-comments:
      MS_BIND: Bind directory at differente place
      MS_LAZYTIME: Lazily update access and modification times
      MS_MANDLOCK: Allow mandatory locks
      MS_NOATIME: Do not update access and modification times
      MS_NODEV: Disallow access to device special files
      MS_NODIRATIME: Do not update directory access and modification times
      MS_NOEXEC: Disallow execution of binaries
      MS_NOSUID: Ignore setuid and setgid bits
      MS_NOUSER: Do not update user and group IDs
      MS_RDONLY: Mount read only
      MS_RELATIME: Update access and modification times only when necessary
      MS_REMOUNT: Remount the filesystem
      MS_SYNCHRONOUS: Write data synchronously (wait until data has been written)
    x-enum-varnames:
    - MS_RDONLY
    - MS_NOSUID
    - MS_NODEV
    - MS_NOEXEC
    - MS_SYNCHRONOUS
    - MS_REMOUNT
    - MS_MANDLOCK
    - MS_NOATIME
    - MS_NODIRATIME
    - MS_BIND
    - MS_LAZYTIME
    - MS_NOUSER
    - MS_RELATIME
  dto.MountPointData:
    properties:
      flags:
        items:
          $ref: '#/definitions/dto.MounDataFlag'
        type: array
      fstype:
        type: string
      id:
        type: integer
      invalid:
        type: boolean
      invalid_error:
        type: string
      is_mounted:
        type: boolean
      path:
        type: string
      primary_path:
        type: string
      source:
        type: string
      warnings:
        type: string
    type: object
  dto.NIC:
    properties:
      duplex:
        description: |-
          Duplex is a string indicating the current duplex setting of this NIC,
          e.g. "Full"
        type: string
      is_virtual:
        description: |-
          IsVirtual is true if the NIC is entirely virtual/emulated, false
          otherwise.
        type: boolean
      mac_address:
        description: MACAddress is the Media Access Control (MAC) address of this
          NIC.
        type: string
      name:
        description: Name is the string identifier the system gave this NIC.
        type: string
      speed:
        description: Speed is a string describing the link speed of this NIC, e.g.
          "1000Mb/s"
        type: string
    type: object
  dto.NetworkInfo:
    properties:
      nics:
        items:
          $ref: '#/definitions/dto.NIC'
        type: array
    type: object
  dto.ReleaseAsset:
    properties:
      arch_asset:
        $ref: '#/definitions/dto.BinaryAsset'
      last_release:
        description: ProgressStatus int8        `json:"update_status"`
        type: string
    type: object
  dto.SambaProcessStatus:
    properties:
      connections:
        type: integer
      cpu_percent:
        type: number
      create_time:
        type: string
      is_running:
        type: boolean
      memory_percent:
        type: number
      name:
        type: string
      open_files:
        type: integer
      pid:
        type: integer
      status:
        items:
          type: string
        type: array
    type: object
  dto.Settings:
    properties:
      allow_hosts:
        items:
          type: string
        type: array
      bind_all_interfaces:
        type: boolean
      compatibility_mode:
        type: boolean
      interfaces:
        items:
          type: string
        type: array
      log_level:
        type: string
      mountoptions:
        items:
          type: string
        type: array
      multi_channel:
        type: boolean
      recyle_bin_enabled:
        type: boolean
      update_channel:
        $ref: '#/definitions/dto.UpdateChannel'
      veto_files:
        items:
          type: string
        type: array
      workgroup:
        type: string
    type: object
  dto.SharedResource:
    properties:
      disabled:
        type: boolean
      invalid:
        type: boolean
      mount_point_data:
        allOf:
        - $ref: '#/definitions/dto.MountPointData'
        description: DeviceId       *uint64        `json:"device_id,omitempty"`
      name:
        type: string
      ro_users:
        items:
          $ref: '#/definitions/dto.User'
        type: array
      timemachine:
        type: boolean
      usage:
        $ref: '#/definitions/dto.HAMountUsage'
      users:
        items:
          $ref: '#/definitions/dto.User'
        type: array
    type: object
  dto.SmbConf:
    properties:
      data:
        type: string
    type: object
  dto.UpdateChannel:
    enum:
    - stable
    - prerelease
    - none
    type: string
    x-enum-varnames:
    - Stable
    - Prerelease
    - None
  dto.UpdateProgress:
    properties:
      last_release:
        type: string
      update_error:
        type: string
      update_status:
        type: integer
    type: object
  dto.User:
    properties:
      is_admin:
        type: boolean
      password:
        type: string
      username:
        type: string
    type: object
  tracerr.Frame:
    properties:
      func:
        description: Func contains a function name.
        type: string
      line:
        description: Line contains a line number.
        type: integer
      path:
        description: Path contains a file path.
        type: string
    type: object
info:
  contact:
    email: lucio.tarantino@gmail.com
    name: Lucio Tarantino
    url: https://github.com/dianlight
  description: This are samba rest admin API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: SRAT API
  version: "1.0"
paths:
  /filesystems:
    get:
      description: Return all supported fs
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: GetFSHandler
      tags:
      - system
  /health:
    get:
      description: HealthCheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.HealthPing'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: HealthCheck
      tags:
      - system
  /nics:
    get:
      description: Return all network interfaces
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NetworkInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: GetNICsHandler
      tags:
      - system
  /restart:
    put:
      description: Restart the server ( useful in development )
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: RestartHandler
      tags:
      - system
  /samba/apply:
    put:
      consumes:
      - application/json
      description: Write the samba config and send signal ro restart
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Write the samba config and send signal ro restart
      tags:
      - samba
  /samba/config:
    get:
      consumes:
      - application/json
      description: Get the generated samba config
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SmbConf'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Get the generated samba config
      tags:
      - samba
  /settings:
    get:
      consumes:
      - application/json
      description: Get the configuration for the global samba settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Settings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Get the configuration for the global samba settings
      tags:
      - samba
    patch:
      consumes:
      - application/json
      description: Update the configuration for the global samba settings
      parameters:
      - description: Update model
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/dto.Settings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Settings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Update the configuration for the global samba settings
      tags:
      - samba
    put:
      consumes:
      - application/json
      description: Update the configuration for the global samba settings
      parameters:
      - description: Update model
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/dto.Settings'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Settings'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Update the configuration for the global samba settings
      tags:
      - samba
  /share:
    post:
      consumes:
      - application/json
      description: create e new share
      parameters:
      - description: Create model
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/dto.SharedResource'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.SharedResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Create a share
      tags:
      - share
  /share/{share_name}:
    delete:
      description: delere a share
      parameters:
      - description: Name
        in: path
        name: share_name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Delere a share
      tags:
      - share
    get:
      description: get share by Name
      parameters:
      - description: Name
        in: path
        name: share_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SharedResource'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Get a share
      tags:
      - share
    put:
      consumes:
      - application/json
      description: update e new share
      parameters:
      - description: Name
        in: path
        name: share_name
        required: true
        type: string
      - description: Update model
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/dto.SharedResource'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SharedResource'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Update a share
      tags:
      - share
  /shares:
    get:
      description: List all configured shares
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.SharedResource'
            type: array
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: List all configured shares
      tags:
      - share
  /shares/usages:
    get:
      description: List all available usages for shares
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.HAMountUsage'
            type: array
      summary: List all available usages for shares
      tags:
      - share
  /sse:
    get:
      consumes:
      - application/json
      description: Open a SSE stream
      produces:
      - text/event-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.EventMessageEnvelope'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Open a SSE stream
      tags:
      - system
  /sse/events:
    get:
      description: Return a list of available WSChannel events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.EventType'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: EventTypeList
      tags:
      - system
  /update:
    put:
      description: Start the update process
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UpdateProgress'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: UpdateHandler
      tags:
      - system
  /user:
    post:
      consumes:
      - application/json
      description: create e new user
      parameters:
      - description: Create model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Create a user
      tags:
      - user
  /user/{username}:
    delete:
      description: delete a user
      parameters:
      - description: Name
        in: path
        name: username
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Delete a user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update e user
      parameters:
      - description: Name
        in: path
        name: username
        required: true
        type: string
      - description: Update model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Update a user
      tags:
      - user
  /useradmin:
    get:
      description: get the admin user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Get the admin user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update admin user
      parameters:
      - description: Update model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Update admin user
      tags:
      - user
  /users:
    get:
      description: List all configured users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.User'
            type: array
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: List all configured users
      tags:
      - user
  /volume/{id}/mount:
    delete:
      description: Umount the selected volume
      parameters:
      - description: id of the mountpoint to be mounted
        in: path
        name: id
        required: true
        type: integer
      - description: Umount forcefully - forces an unmount regardless of currently
          open or otherwise used files within the file system to be unmounted.
        in: query
        name: force
        required: true
        type: boolean
      - description: Umount lazily - disallows future uses of any files below path
          -- i.e. it hides the file system mounted at path, but the file system itself
          is still active and any currently open files can continue to be used. When
          all references to files from this file system are gone, the file system
          will actually be unmounted.
        in: query
        name: lazy
        required: true
        type: boolean
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: Umount the selected volume
      tags:
      - volume
    post:
      consumes:
      - application/json
      description: mount an existing volume
      parameters:
      - description: id of the mountpoint to be mounted
        in: path
        name: id
        required: true
        type: integer
      - description: Mount data
        in: body
        name: mount_data
        required: true
        schema:
          $ref: '#/definitions/dto.MountPointData'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.MountPointData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: mount an existing volume
      tags:
      - volume
  /volumes:
    get:
      description: List all available volumes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockInfo'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorInfo'
      summary: List all available volumes
      tags:
      - volume
securityDefinitions:
  ApiKeyAuth:
    description: HomeAssistant Supervisor Token
    in: header
    name: X-Supervisor-Token
    type: apiKey
swagger: "2.0"
