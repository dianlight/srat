definitions:
  config.Share:
    properties:
      disabled:
        type: boolean
      fs:
        type: string
      name:
        type: string
      path:
        type: string
      ro_users:
        items:
          type: string
        type: array
      timemachine:
        type: boolean
      usage:
        type: string
      users:
        items:
          type: string
        type: array
    type: object
  config.Shares:
    additionalProperties:
      $ref: '#/definitions/config.Share'
    type: object
  config.UpdateChannel:
    enum:
    - stable
    - prerelease
    - none
    type: string
    x-enum-varnames:
    - Stable
    - Prerelease
    - None
  config.User:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  lsblk.Device:
    properties:
      children:
        items:
          $ref: '#/definitions/lsblk.Device'
        type: array
      fsavail:
        type: integer
      fssize:
        type: integer
      fstype:
        type: string
      fsusage:
        description: percent that was used
        type: integer
      fsused:
        type: integer
      group:
        type: string
      hctl:
        type: string
      hotplug:
        type: boolean
      label:
        type: string
      model:
        type: string
      mountpoint:
        type: string
      mountpoints:
        items:
          type: string
        type: array
      name:
        type: string
      partlabel:
        type: string
      parttype:
        type: string
      partuuid:
        type: string
      path:
        type: string
      pttype:
        type: string
      ptuuid:
        type: string
      rev:
        type: string
      rm:
        type: boolean
      ro:
        type: boolean
      serial:
        type: string
      state:
        type: string
      subsystems:
        type: string
      tran:
        type: string
      type:
        type: string
      uuid:
        type: string
      vendor:
        type: string
      wwn:
        description: Alignment  int      `json:"alignment"`
        type: string
    type: object
  main.GlobalConfig:
    properties:
      allow_hosts:
        items:
          type: string
        type: array
      bind_all_interfaces:
        type: boolean
      compatibility_mode:
        type: boolean
      interfaces:
        items:
          type: string
        type: array
      log_level:
        type: string
      mountoptions:
        items:
          type: string
        type: array
      multi_channel:
        type: boolean
      recyle_bin_enabled:
        type: boolean
      update_channel:
        $ref: '#/definitions/config.UpdateChannel'
      veto_files:
        items:
          type: string
        type: array
      workgroup:
        type: string
    type: object
  main.Health:
    properties:
      alive:
        type: boolean
      last_release:
        type: string
      read_only:
        type: boolean
      samba_pid:
        type: integer
    type: object
  main.ResponseError:
    properties:
      body: {}
      code:
        type: integer
      error:
        type: string
    type: object
  main.RootDevice:
    properties:
      group:
        type: string
      hctl:
        type: string
      hotplug:
        type: boolean
      label:
        type: string
      model:
        type: string
      name:
        type: string
      partlabel:
        type: string
      parttype:
        type: string
      partuuid:
        type: string
      path:
        type: string
      pttype:
        type: string
      ptuuid:
        type: string
      rev:
        type: string
      rm:
        type: boolean
      ro:
        type: boolean
      serial:
        type: string
      state:
        type: string
      subsystems:
        type: string
      tran:
        type: string
      type:
        type: string
      uuid:
        type: string
      vendor:
        type: string
      wwn:
        description: Alignment  int    `json:"alignment"`
        type: string
    type: object
  main.SambaProcessStatus:
    properties:
      connections:
        type: integer
      cpu_percent:
        type: number
      create_time:
        type: string
      is_running:
        type: boolean
      memory_percent:
        type: number
      name:
        type: string
      open_files:
        type: integer
      pid:
        type: integer
      status:
        items:
          type: string
        type: array
    type: object
  main.Volume:
    properties:
      device:
        type: string
      device_name:
        type: string
      fstype:
        type: string
      label:
        type: string
      lsbk:
        $ref: '#/definitions/lsblk.Device'
      mountpoint:
        type: string
      opts:
        items:
          type: string
        type: array
      root_device:
        allOf:
        - $ref: '#/definitions/main.RootDevice'
        description: Stats        disk.UsageStat `json:"stats"`
      serial_number:
        type: string
    type: object
info:
  contact:
    email: lucio.tarantino@gmail.com
    name: Lucio Tarantino
  description: This are samba rest admin API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: SRAT API
  version: "1.0"
paths:
  /admin/user:
    get:
      description: get the admin user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.User'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Get the admin user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update admin user
      parameters:
      - description: Update model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/config.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update admin user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update admin user
      parameters:
      - description: Update model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/config.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update admin user
      tags:
      - user
  /global:
    get:
      consumes:
      - application/json
      description: Get the configuration for the global samba settings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.GlobalConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Get the configuration for the global samba settings
      tags:
      - samba
    patch:
      consumes:
      - application/json
      description: Update the configuration for the global samba settings
      parameters:
      - description: Update model
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/main.GlobalConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.GlobalConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update the configuration for the global samba settings
      tags:
      - samba
    put:
      consumes:
      - application/json
      description: Update the configuration for the global samba settings
      parameters:
      - description: Update model
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/main.GlobalConfig'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.GlobalConfig'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update the configuration for the global samba settings
      tags:
      - samba
  /health:
    get:
      description: HealthCheck
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Health'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: HealthCheck
      tags:
      - system
  /samba:
    get:
      consumes:
      - application/json
      description: Get the generated samba config
      produces:
      - plain/text
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Get the generated samba config
      tags:
      - samba
  /samba/apply:
    put:
      consumes:
      - application/json
      description: Write the samba config and send signal ro restart
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Write the samba config and send signal ro restart
      tags:
      - samba
  /samba/status:
    get:
      consumes:
      - application/json
      description: Get the current samba process status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.SambaProcessStatus'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Get the current samba process status
      tags:
      - samba
  /share:
    post:
      consumes:
      - application/json
      description: create e new share
      parameters:
      - description: Create model
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/config.Share'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/config.Share'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Create a share
      tags:
      - share
  /share/{share_name}:
    delete:
      description: delere a share
      parameters:
      - description: Name
        in: path
        name: share_name
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Delere a share
      tags:
      - share
    get:
      description: get share by Name
      parameters:
      - description: Name
        in: path
        name: share_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.Share'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Get a share
      tags:
      - share
    patch:
      consumes:
      - application/json
      description: update e new share
      parameters:
      - description: Name
        in: path
        name: share_name
        required: true
        type: string
      - description: Update model
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/config.Share'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.Share'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update a share
      tags:
      - share
    put:
      consumes:
      - application/json
      description: update e new share
      parameters:
      - description: Name
        in: path
        name: share_name
        required: true
        type: string
      - description: Update model
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/config.Share'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.Share'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update a share
      tags:
      - share
  /shares:
    get:
      description: List all configured shares
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.Shares'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: List all configured shares
      tags:
      - share
  /user:
    post:
      consumes:
      - application/json
      description: create e new user
      parameters:
      - description: Create model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/config.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/config.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Create a user
      tags:
      - user
  /user/{username}:
    delete:
      description: delete a user
      parameters:
      - description: Name
        in: path
        name: username
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Delete a user
      tags:
      - user
    get:
      description: get user by Name
      parameters:
      - description: Name
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.User'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Get a user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update e user
      parameters:
      - description: Name
        in: path
        name: username
        required: true
        type: string
      - description: Update model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/config.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update a user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update e user
      parameters:
      - description: Name
        in: path
        name: username
        required: true
        type: string
      - description: Update model
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/config.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/config.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.ResponseError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.ResponseError'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Update a user
      tags:
      - user
  /users:
    get:
      description: List all configured users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/config.User'
            type: array
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: List all configured users
      tags:
      - user
  /volume/{volume_name}:
    get:
      description: get a volume by Name
      parameters:
      - description: Name
        in: path
        name: volume_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Volume'
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: Get a volume
      tags:
      - volume
  /volumes:
    get:
      description: List all available volumes
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Volume'
            type: array
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: List all available volumes
      tags:
      - volume
  /ws:
    get:
      description: Open the WSChannel
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "405":
          description: Method Not Allowed
          schema:
            $ref: '#/definitions/main.ResponseError'
      summary: WSChannel
      tags:
      - system
swagger: "2.0"
