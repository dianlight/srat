{
	"components": {
		"schemas": {
			"EventMessageEnvelope": {
				"description": "EventMessageEnvelope schema",
				"properties": {
					"data": {},
					"event": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"FilesystemType": {
				"description": "FilesystemType schema",
				"type": "string"
			},
			"HTTPError": {
				"description": "HTTPError schema",
				"properties": {
					"detail": {
						"description": "Human readable error message",
						"nullable": true,
						"type": "string"
					},
					"errors": {
						"items": {
							"properties": {
								"more": {
									"additionalProperties": {},
									"type": "object"
								},
								"name": {
									"type": "string"
								},
								"reason": {
									"type": "string"
								}
							},
							"type": "object"
						},
						"nullable": true,
						"type": "array"
					},
					"instance": {
						"nullable": true,
						"type": "string"
					},
					"status": {
						"description": "HTTP status code",
						"example": 403,
						"nullable": true,
						"type": "integer"
					},
					"title": {
						"description": "Short title of the error",
						"nullable": true,
						"type": "string"
					},
					"type": {
						"description": "URL of the error type. Can be used to lookup the error in a documentation",
						"nullable": true,
						"type": "string"
					}
				},
				"type": "object"
			},
			"HealthPing": {
				"description": "HealthPing schema",
				"properties": {
					"alive": {
						"type": "boolean"
					},
					"aliveTime": {
						"format": "int64",
						"type": "integer"
					},
					"dirty_tracking": {
						"properties": {
							"settings": {
								"type": "boolean"
							},
							"shares": {
								"type": "boolean"
							},
							"users": {
								"type": "boolean"
							},
							"volumes": {
								"type": "boolean"
							}
						},
						"type": "object"
					},
					"last_error": {
						"type": "string"
					},
					"last_release": {
						"properties": {
							"arch_asset": {
								"nullable": true,
								"properties": {
									"id": {
										"format": "int64",
										"type": "integer"
									},
									"size": {
										"type": "integer"
									}
								},
								"type": "object"
							},
							"last_release": {
								"nullable": true,
								"type": "string"
							}
						},
						"type": "object"
					},
					"read_only": {
						"type": "boolean"
					},
					"samba_process_status": {
						"properties": {
							"connections": {
								"type": "integer"
							},
							"cpu_percent": {
								"format": "double",
								"type": "number"
							},
							"create_time": {
								"format": "date-time",
								"type": "string"
							},
							"is_running": {
								"type": "boolean"
							},
							"memory_percent": {
								"format": "float",
								"type": "number"
							},
							"name": {
								"type": "string"
							},
							"open_files": {
								"type": "integer"
							},
							"pid": {
								"format": "int32",
								"type": "integer"
							},
							"status": {
								"items": {
									"type": "string"
								},
								"type": "array"
							}
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"NetworkInfo": {
				"description": "NetworkInfo schema",
				"properties": {
					"nics": {
						"items": {
							"properties": {
								"duplex": {
									"type": "string"
								},
								"is_virtual": {
									"type": "boolean"
								},
								"mac_address": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"speed": {
									"type": "string"
								}
							},
							"type": "object"
						},
						"type": "array"
					}
				},
				"type": "object"
			},
			"Settings": {
				"description": "Settings schema",
				"properties": {
					"allow_hosts": {
						"items": {
							"type": "string"
						},
						"nullable": true,
						"type": "array"
					},
					"bind_all_interfaces": {
						"nullable": true,
						"type": "boolean"
					},
					"compatibility_mode": {
						"nullable": true,
						"type": "boolean"
					},
					"interfaces": {
						"items": {
							"type": "string"
						},
						"nullable": true,
						"type": "array"
					},
					"log_level": {
						"nullable": true,
						"type": "string"
					},
					"mountoptions": {
						"items": {
							"type": "string"
						},
						"nullable": true,
						"type": "array"
					},
					"multi_channel": {
						"nullable": true,
						"type": "boolean"
					},
					"recyle_bin_enabled": {
						"nullable": true,
						"type": "boolean"
					},
					"update_channel": {
						"nullable": true,
						"type": "string"
					},
					"veto_files": {
						"items": {
							"type": "string"
						},
						"nullable": true,
						"type": "array"
					},
					"workgroup": {
						"nullable": true,
						"type": "string"
					}
				},
				"type": "object"
			},
			"SharedResource": {
				"description": "SharedResource schema",
				"properties": {
					"disabled": {
						"description": "bool schema",
						"nullable": true,
						"type": "boolean"
					},
					"invalid": {
						"description": "bool schema",
						"nullable": true,
						"type": "boolean"
					},
					"mount_point_data": {
						"nullable": true,
						"properties": {
							"flags": {
								"items": {
									"type": "integer"
								},
								"type": "array"
							},
							"fstype": {
								"type": "string"
							},
							"id": {
								"minimum": 0,
								"type": "integer"
							},
							"invalid": {
								"type": "boolean"
							},
							"invalid_error": {
								"nullable": true,
								"type": "string"
							},
							"is_mounted": {
								"type": "boolean"
							},
							"path": {
								"type": "string"
							},
							"primary_path": {
								"type": "string"
							},
							"source": {
								"type": "string"
							},
							"warnings": {
								"nullable": true,
								"type": "string"
							}
						},
						"type": "object"
					},
					"name": {
						"nullable": true,
						"type": "string"
					},
					"ro_users": {
						"items": {
							"properties": {
								"is_admin": {
									"description": "bool schema",
									"type": "boolean"
								},
								"password": {
									"nullable": true,
									"type": "string"
								},
								"username": {
									"nullable": true,
									"type": "string"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"timemachine": {
						"description": "bool schema",
						"nullable": true,
						"type": "boolean"
					},
					"usage": {
						"nullable": true,
						"type": "string"
					},
					"users": {
						"items": {
							"properties": {
								"is_admin": {
									"description": "bool schema",
									"type": "boolean"
								},
								"password": {
									"nullable": true,
									"type": "string"
								},
								"username": {
									"nullable": true,
									"type": "string"
								}
							},
							"type": "object"
						},
						"type": "array"
					}
				},
				"type": "object"
			},
			"SmbConf": {
				"description": "SmbConf schema",
				"properties": {
					"data": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"UpdateProgress": {
				"description": "UpdateProgress schema",
				"properties": {
					"last_release": {
						"nullable": true,
						"type": "string"
					},
					"update_error": {
						"nullable": true,
						"type": "string"
					},
					"update_status": {
						"maximum": 127,
						"minimum": -128,
						"type": "integer"
					}
				},
				"type": "object"
			},
			"User": {
				"description": "User schema",
				"properties": {
					"is_admin": {
						"description": "bool schema",
						"nullable": true,
						"type": "boolean"
					},
					"password": {
						"nullable": true,
						"type": "string"
					},
					"username": {
						"nullable": true,
						"type": "string"
					}
				},
				"type": "object"
			},
			"bool": {
				"description": "bool schema",
				"type": "boolean"
			},
			"unknown-interface": {
				"description": "unknown-interface schema"
			}
		},
		"securitySchemes": {
			"ApiKeyAuth": {
				"description": "HomeAssistant Supervisor Token",
				"in": "header",
				"name": "X-Supervisor-Token",
				"type": "apiKey"
			}
		}
	},
	"info": {
		"contact": {
			"email": "lucio.tarantino@gmail.com",
			"name": "Lucio Tarantino",
			"url": "https://github.com/dianlight/srat"
		},
		"description": "This are samba rest admin API",
		"title": "SRAT API",
		"version": "1.0"
	},
	"openapi": "3.1.0",
	"paths": {
		"/filesystems": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SystemHanler).RetrieveFilesystemTypes`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nReturn all supported fs",
				"operationId": "GET_/filesystems",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FilesystemType"
									},
									"type": "array"
								}
							},
							"application/xml": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/FilesystemType"
									},
									"type": "array"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "retrieve filesystem types",
				"tags": [
					"system"
				]
			}
		},
		"/health": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*HealthHanler).CheckHealthStatus`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nHealthCheck",
				"operationId": "GET_/health",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HealthPing"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HealthPing"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "check health status",
				"tags": [
					"system"
				]
			}
		},
		"/nics": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SystemHanler).RetrieveNetworkAdapters`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nReturn all network interfaces",
				"operationId": "GET_/nics",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NetworkInfo"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/NetworkInfo"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "retrieve network adapters",
				"tags": [
					"system"
				]
			}
		},
		"/restart": {
			"put": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SystemHanler).PerformServerRestart`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nRestart the server ( useful in development )",
				"operationId": "PUT_/restart",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "perform server restart",
				"tags": [
					"dev"
				]
			}
		},
		"/samba/apply": {
			"put": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SambaHanler).ApplySamba`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nWrite the samba config and send signal to restart",
				"operationId": "PUT_/samba/apply",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "apply samba",
				"tags": [
					"samba"
				]
			}
		},
		"/samba/config": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SambaHanler).GetSambaConfig`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nGet the generated samba config",
				"operationId": "GET_/samba/config",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SmbConf"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/SmbConf"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get samba config",
				"tags": [
					"samba"
				]
			}
		},
		"/settings": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SettingsHanler).GetSettings`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nGet the configuration for the global samba settings",
				"operationId": "GET_/settings",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get settings",
				"tags": [
					"samba"
				]
			},
			"patch": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SettingsHanler).UpdateSettings`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nUpdate the configuration for the global samba settings",
				"operationId": "PATCH_/settings",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/Settings"
							}
						}
					},
					"description": "Request body for dto.Settings",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update settings",
				"tags": [
					"samba"
				]
			},
			"put": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*SettingsHanler).UpdateSettings`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nUpdate the configuration for the global samba settings",
				"operationId": "PUT_/settings",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/Settings"
							}
						}
					},
					"description": "Request body for dto.Settings",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Settings"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update settings",
				"tags": [
					"samba"
				]
			}
		},
		"/share": {
			"post": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*ShareHandler).CreateShare`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\ncreate e new share",
				"operationId": "POST_/share",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/SharedResource"
							}
						}
					},
					"description": "Request body for dto.SharedResource",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SharedResource"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/SharedResource"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "create share",
				"tags": [
					"share"
				]
			}
		},
		"/share/{share_name}": {
			"delete": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*ShareHandler).DeleteShare`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\ndelere a share",
				"operationId": "DELETE_/share/:share_name",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "share_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "delete share",
				"tags": [
					"share"
				]
			},
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*ShareHandler).GetShare`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nget share by Name",
				"operationId": "GET_/share/:share_name",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "share_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SharedResource"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/SharedResource"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get share",
				"tags": [
					"share"
				]
			},
			"put": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*ShareHandler).UpdateShare`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nupdate e new share",
				"operationId": "PUT_/share/:share_name",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "share_name",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/SharedResource"
							}
						}
					},
					"description": "Request body for dto.SharedResource",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SharedResource"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/SharedResource"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update share",
				"tags": [
					"share"
				]
			}
		},
		"/shares": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*ShareHandler).ListShares`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nList all configured shares",
				"operationId": "GET_/shares",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/SharedResource"
									},
									"type": "array"
								}
							},
							"application/xml": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/SharedResource"
									},
									"type": "array"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "list shares",
				"tags": [
					"share"
				]
			}
		},
		"/sse": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*BrokerHandler).Stream`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nOpen a SSE stream",
				"operationId": "GET_/sse",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/EventMessageEnvelope"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/EventMessageEnvelope"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "stream",
				"tags": [
					"system"
				]
			}
		},
		"/update": {
			"put": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*UpgradeHanler).UpdateHandler`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nStart the update process",
				"operationId": "PUT_/update",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UpdateProgress"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/UpdateProgress"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update handler",
				"tags": [
					"system"
				]
			}
		},
		"/user": {
			"post": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*UserHandler).CreateUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nCreate a user",
				"operationId": "POST_/user",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"description": "Request body for dto.User",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "create user",
				"tags": [
					"user"
				]
			}
		},
		"/user/{username}": {
			"delete": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*UserHandler).DeleteUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nDelete a user",
				"operationId": "DELETE_/user/:username",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "username",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/bool"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "delete user",
				"tags": [
					"user"
				]
			},
			"put": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*UserHandler).UpdateUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nUpdate a user",
				"operationId": "PUT_/user/:username",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "username",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"description": "Request body for dto.User",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update user",
				"tags": [
					"user"
				]
			}
		},
		"/useradmin": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*UserHandler).GetAdminUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nGet the admin user",
				"operationId": "GET_/useradmin",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get admin user",
				"tags": [
					"user"
				]
			},
			"put": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*UserHandler).UpdateAdminUser`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nUpdate admin user",
				"operationId": "PUT_/useradmin",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"description": "Request body for dto.User",
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "update admin user",
				"tags": [
					"user"
				]
			}
		},
		"/users": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*UserHandler).ListUsers`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\nList all configured users",
				"operationId": "GET_/users",
				"parameters": [
					{
						"in": "header",
						"name": "Accept",
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							},
							"application/xml": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "list users",
				"tags": [
					"user"
				]
			}
		},
		"/volume/{id}/mount": {
			"delete": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*VolumeHandler).UmountVolume`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "DELETE_/volume/:id/mount",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "umount volume"
			},
			"post": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*VolumeHandler).MountVolume`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "POST_/volume/:id/mount",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "mount volume"
			}
		},
		"/volumes": {
			"get": {
				"description": "#### Controller: \n\n`github.com/dianlight/srat/api.(*VolumeHandler).ListVolumes`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n",
				"operationId": "GET_/volumes",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							}
						},
						"description": "OK"
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Bad Request _(validation or deserialization error)_"
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/HTTPError"
								}
							}
						},
						"description": "Internal Server Error _(panics)_"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "list volumes"
			}
		}
	},
	"security": [
		{
			"ApiKeyAuth": []
		}
	],
	"servers": [
		{
			"description": "local server",
			"url": "http://[::]:8080"
		}
	],
	"tags": [
		{
			"name": "dev"
		},
		{
			"name": "samba"
		},
		{
			"name": "share"
		},
		{
			"name": "system"
		},
		{
			"name": "user"
		}
	]
}