// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package converter

import (
	config "github.com/dianlight/srat/config"
	dto "github.com/dianlight/srat/dto"
)

type ConfigToDtoConverterImpl struct{}

func (c *ConfigToDtoConverterImpl) SharedResourceToShare(source dto.SharedResource, target *config.Share) error {
	if source.Name != "" {
		target.Name = source.Name
	}
	var pString *string
	if source.MountPointData != nil {
		pString = &source.MountPointData.Path
	}
	if pString != nil {
		target.Path = *pString
	}
	var pString2 *string
	if source.MountPointData != nil {
		pString2 = source.MountPointData.FSType
	}
	if pString2 != nil {
		target.FS = *pString2
	}
	if source.Disabled != nil {
		target.Disabled = *source.Disabled
	}
	if source.Users != nil {
		target.Users = make([]string, len(source.Users))
		for i := 0; i < len(source.Users); i++ {
			target.Users[i] = DtoUserToString(source.Users[i])
		}
	}
	if source.RoUsers != nil {
		target.RoUsers = make([]string, len(source.RoUsers))
		for j := 0; j < len(source.RoUsers); j++ {
			target.RoUsers[j] = DtoUserToString(source.RoUsers[j])
		}
	}
	if source.TimeMachine != nil {
		target.TimeMachine = *source.TimeMachine
	}
	if source.RecycleBin != nil {
		xbool := *source.RecycleBin
		target.RecycleBin = &xbool
	}
	if source.GuestOk != nil {
		xbool2 := *source.GuestOk
		target.GuestOk = &xbool2
	}
	if source.TimeMachineMaxSize != nil {
		xstring := *source.TimeMachineMaxSize
		target.TimeMachineMaxSize = &xstring
	}
	if source.Usage != "" {
		target.Usage = string(source.Usage)
	}
	if source.VetoFiles != nil {
		target.VetoFiles = make([]string, len(source.VetoFiles))
		for k := 0; k < len(source.VetoFiles); k++ {
			target.VetoFiles[k] = source.VetoFiles[k]
		}
	}
	return nil
}
func (c *ConfigToDtoConverterImpl) UserToOtherUser(source dto.User, target *config.User) error {
	if source.Username != "" {
		target.Username = source.Username
	}
	if source.Password != "" {
		target.Password = source.Password
	}
	return nil
}
