// Code generated by github.com/jmattheis/goverter, DO NOT EDIT.
//go:build !goverter

package converter

import (
	dbom "github.com/dianlight/srat/dbom"
	dto "github.com/dianlight/srat/dto"
)

type IssueToDtoConverterImpl struct{}

func (c *IssueToDtoConverterImpl) ToDbom(source *dto.Issue) *dbom.Issue {
	var pDbomIssue *dbom.Issue
	if source != nil {
		var dbomIssue dbom.Issue
		dbomIssue.ID = (*source).ID
		dbomIssue.CreatedAt = timeToTime((*source).Date)
		dbomIssue.Title = (*source).Title
		dbomIssue.Description = (*source).Description
		dbomIssue.DetailLink = (*source).DetailLink
		dbomIssue.ResolutionLink = (*source).ResolutionLink
		dbomIssue.Repeating = (*source).Repeating
		pDbomIssue = &dbomIssue
	}
	return pDbomIssue
}
func (c *IssueToDtoConverterImpl) ToDto(source *dbom.Issue) *dto.Issue {
	var pDtoIssue *dto.Issue
	if source != nil {
		var dtoIssue dto.Issue
		dtoIssue.ID = (*source).ID
		dtoIssue.Date = timeToTime((*source).CreatedAt)
		dtoIssue.Title = (*source).Title
		dtoIssue.Description = (*source).Description
		dtoIssue.DetailLink = (*source).DetailLink
		dtoIssue.ResolutionLink = (*source).ResolutionLink
		dtoIssue.Repeating = (*source).Repeating
		pDtoIssue = &dtoIssue
	}
	return pDtoIssue
}
func (c *IssueToDtoConverterImpl) ToDtoList(source []*dbom.Issue) []*dto.Issue {
	var pDtoIssueList []*dto.Issue
	if source != nil {
		pDtoIssueList = make([]*dto.Issue, len(source))
		for i := 0; i < len(source); i++ {
			pDtoIssueList[i] = c.ToDto(source[i])
		}
	}
	return pDtoIssueList
}
